package com.shyfay.usual.base;

/**
 * @Notes 位运算 ，本例利用位运算进行交换两个数字变量的值
 * 用到的原理是：一个数值变量，按位与同一个数值进行疑惑运算两次，那么这个数的值不变
 * 由此可得，两个正整数相加，直接用两个按位取反即可得到结果
 * @Author muxue
 * @Since 7/29/2020
 */
public class BitTest {
    public static void main(String[] args) {
        int x = 10, y = 20;
        //int的长度是4个字节32位
        //1.10的二进制是   0000 0000 0000 0000 0000 0000 0000 1010
        //2.20的二进制是   0000 0000 0000 0000 0000 0000 0001 0100
        //3.取疑惑操作     0000 0000 0000 0000 0000 0000 0001 1110 -> 16 + 8 + 4 + 2 = 30
        //4.再用3与2取异或 0000 0000 0000 0000 0000 0000 0000 1010 -> 2 + 8 = 10;
        //5.再用4与3取疑惑 0000 0000 0000 0000 0000 0000 0001 0100 -> 4 + 16 = 20;
        x = x ^ y;
        System.out.println(x);
        y = x ^ y;
        System.out.println(y);
        x = x ^ y;
        System.out.println(x);

    }
}
