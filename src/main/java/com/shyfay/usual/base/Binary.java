package com.shyfay.usual.base;

/**
 * @Description
 * 数字在计算机中的存储形式
 * 在JAVA中将整数常量定义成16进制，是为了表示该常量在计算机中存储的二进制串
 * 例如0xFFFFFFFF代表的含义是0x表示这一串字符代表的是一个16进制数，
 * 然后后面的每一位代表计算机中的4个二进制位，F代表10进制数的15，而15用二进制表示就是1111
 * 那么0xFFFFFFFFF代表的二进制串就是：1111 1111 1111 1111 1111 1111 1111 1111。
 * 1111 1111 1111 1111代表的是真实存储的值的反码，在计算机中负数是通过反码来存储的，例如
 * -1的源码应该是 1000 0000 0000 0000 0000 0000 0000 0001，第一位为1表示是负数
 * 然后计算机中存储的是反码，反码的计算规则就是：将源码除符号位以外的其他位按位取反，然后加1
 * 1000 0000 0000 0000 0000 0000 0000 0001 除符号位以外的其他位按位取反得到
 * 1111 1111 1111 1111 1111 1111 1111 1110
 * 然后加 1 得到 1111 1111 1111 1111 1111 1111 1111 1111
 * 这就是-1 这个二进制数在计算机中存储的二进制位了
 * 0xFFFFFFFF代表的二进制串是 1111 1111 1111 1111 1111 1111 1111 1111
 * 然后对这个二进制串做取反的逆操作，即先减1然后取反
 * 1111 1111 1111 1111 1111 1111 1111 1111 减 1 得到
 * 1111 1111 1111 1111 1111 1111 1111 1110 然后将这个二进制串除了符号位以外的位全部取反得到
 * 1000 0000 0000 0000 0000 0000 0000 0001  然后这个二进制串代表的就是 -1
 * 所以0xFFFFFFFF实际代表的二进制数是-1
 * @Author winston
 * @Since 10/23/2019
 */
public class Binary {
    public static void main(String[] args) {
        int i = 0xFFFFFFFF;
        System.out.println(i);
    }
}
